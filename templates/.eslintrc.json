{
  "root": true,
  "ignorePatterns": ["**/*"],
  "plugins": ["@nx"],
  "settings": {
    "import/parsers": {
      "@typescript-eslint/parser": [".ts", ".tsx"] // @typescript-eslint/parser
    },
    "import/resolver": {
      "typescript": {
        "project": ["tsconfig.base.json"]
      },
      "node": {
        "project": ["tsconfig.base.json"]
      }
    }
  },
  "overrides": [
    {
      "parserOptions": {
        "project": "tsconfig.base.json"
      },
      "files": ["*.ts", "*.tsx", "*.js", "*.jsx"],
      "extends": [
        "airbnb-typescript", // eslint-config-airbnb-typescript
        "eslint:recommended", // eslint-plugin-react
        "plugin:react/recommended", // eslint-plugin-react
        "plugin:react-hooks/recommended", // eslint-plugin-react-hooks
        "plugin:react-perf/recommended", // eslint-plugin-react-perf
        "plugin:sonarjs/recommended", // eslint-plugin-sonarjs
        "plugin:@tanstack/eslint-plugin-query/recommended", // @tanstack/eslint-plugin-query
        "plugin:tailwindcss/recommended", // eslint-plugin-tailwindcss
        "prettier" // eslint-config-prettier
      ],
      "plugins": [
        "@typescript-eslint", // @typescript-eslint/eslint-plugin
        "react", // eslint-plugin-react
        "react-perf", // eslint-plugin-react-perf
        "react-hooks", // eslint-plugin-react-hooks
        "@tanstack/query", // @tanstack/eslint-plugin-query
        "sonarjs", // eslint-plugin-sonarjs
        "import", // eslint-plugin-import
        "sort-destructure-keys", // eslint-plugin-sort-destructure-keys
        "sort-keys-fix", // eslint-plugin-sort-keys-fix
        "prettier" // eslint-plugin-prettier
      ],
      "settings": {
        "import/resolver": {
          "node": {
            "extensions": [".js", ".jsx", ".ts", ".tsx"]
          },
          "typescript": {}
        },
        "react": {
          "version": "detect"
        }
      },
      "rules": {
        "@nx/enforce-module-boundaries": [
          "error",
          {
            "enforceBuildableLibDependency": true,
            "allow": [],
            "depConstraints": [
              {
                "sourceTag": "*",
                "onlyDependOnLibsWithTags": ["*"]
              }
            ]
          }
        ],
        "@tanstack/query/exhaustive-deps": "error",
        "array-bracket-spacing": ["error", "never"],
        "arrow-body-style": ["error", "as-needed"],
        "arrow-parens": ["error", "always"],
        "brace-style": "error",
        "comma-dangle": [
          "error",
          {
            "arrays": "always-multiline",
            "exports": "always-multiline",
            "functions": "only-multiline",
            "imports": "always-multiline",
            "objects": "always-multiline"
          }
        ],
        "comma-spacing": [
          "error",
          {
            "after": true,
            "before": false
          }
        ],
        "curly": "error",
        "eol-last": ["error", "always"],
        "eqeqeq": ["error", "always"],
        "func-names": "error",
        "import/no-extraneous-dependencies": "off",
        "import/no-unresolved": "error",
        "sort-destructure-keys/sort-destructure-keys": [
          "error",
          {
            "caseSensitive": false
          }
        ],
        "sort-keys-fix/sort-keys-fix": "warn",
        "import/order": [
          "error",
          {
            "alphabetize": {
              "order": "asc"
            },
            "groups": [
              "builtin",
              "external",
              "internal",
              "parent",
              "sibling",
              "index"
            ],
            "newlines-between": "always"
          }
        ],
        "jsx-quotes": ["error", "prefer-double"],
        "key-spacing": [
          "error",
          {
            "mode": "strict"
          }
        ],
        "max-depth": ["error", 3],
        "max-len": [
          "error",
          {
            "code": 125,
            "ignoreComments": true,
            "ignoreStrings": true,
            "ignoreTemplateLiterals": true
          }
        ],
        "max-params": ["error", 3],
        "no-alert": "error",
        "no-console": "warn",
        "no-duplicate-imports": "error",
        "no-empty-function": "warn",
        "no-extra-boolean-cast": "warn",
        "no-extra-semi": "warn",
        "no-magic-numbers": [
          "error",
          {
            "ignore": [-1, 0, 1, 2, 30, 60, 100, 1000],
            "ignoreArrayIndexes": true
          }
        ],
        "no-multi-spaces": "warn",
        "no-multiple-empty-lines": [
          "error",
          {
            "max": 1,
            "maxEOF": 0
          }
        ],
        "no-plusplus": "warn",
        "no-trailing-spaces": "warn",
        "no-unreachable": "error",
        "no-unused-expressions": "warn",
        "no-unused-vars": "off",
        "no-use-before-define": "off",
        "no-var": "error",
        "padding-line-between-statements": [
          "error",
          {
            "blankLine": "always",
            "next": "return",
            "prev": "*"
          }
        ],
        "prefer-arrow-callback": "warn",
        "prefer-const": "error",
        "prettier/prettier": [
          "error",
          {
            "endOfLine": "auto"
          }
        ],
        "quotes": ["error", "single", { "avoidEscape": true }],
        "react-hooks/exhaustive-deps": "warn",
        "react-hooks/rules-of-hooks": "error",
        "react-perf/jsx-no-new-array-as-prop": "off",
        "react-perf/jsx-no-new-function-as-prop": "off",
        "react-perf/jsx-no-new-object-as-prop": "off",
        "react/display-name": "off",
        "react/jsx-filename-extension": [
          "warn",
          {
            "extensions": [".tsx", ".ts"]
          }
        ],
        "react/jsx-handler-names": [
          "error",
          {
            "eventHandlerPrefix": "handle",
            "eventHandlerPropPrefix": "on"
          }
        ],
        "react/jsx-sort-props": [
          "error",
          {
            "callbacksLast": true,
            "ignoreCase": true,
            "reservedFirst": true,
            "shorthandFirst": true
          }
        ],
        "react/prefer-stateless-function": "error",
        "react/prop-types": "off",
        "react/react-in-jsx-scope": "off",
        "react/sort-comp": [
          "error",
          {
            "order": [
              "type-annotations",
              "static-methods",
              "lifecycle",
              "/^handle.+$/",
              "everything-else",
              "render"
            ]
          }
        ],
        "semi": ["error", "always"],
        "semi-spacing": [
          "error",
          {
            "after": true,
            "before": false
          }
        ],
        "sonarjs/cognitive-complexity": ["error", 50],
        "sort-keys": [
          "error",
          "asc",
          {
            "caseSensitive": true,
            "minKeys": 2,
            "natural": false
          }
        ],
        "space-before-blocks": "error",
        "space-before-function-paren": [
          "error",
          {
            "anonymous": "always",
            "asyncArrow": "always",
            "named": "never"
          }
        ],
        "space-in-parens": ["error", "never"],
        "tailwindcss/classnames-order": "off"
      }
    },
    {
      "files": ["*.ts", "*.tsx"],
      "extends": ["plugin:@nx/typescript"],
      "rules": {
        "@typescript-eslint/consistent-type-definitions": "off",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-use-before-define": "off",
        "@typescript-eslint/no-unused-vars": [
          "error",
          {
            "args": "none"
          }
        ],
        "@typescript-eslint/ban-types": [
          "error",
          {
            "types": {
              "{}": false,
              "Function": false
            },
            "extendDefaults": true
          }
        ]
      }
    },
    {
      "files": ["*.js", "*.jsx"],
      "extends": ["plugin:@nx/javascript"],
      "rules": {}
    }
  ]
}
